<Window x:Class="Wpf45_vlc_UI.MVVM.View.PreviewCamView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Wpf45_vlc_UI.MVVM.View"
        mc:Ignorable="d"
        Title="PreviewCamView" Height="450" Width="600"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="10"/>
    </WindowChrome.WindowChrome>
    <Grid x:Name="PreViewGrid">
        <Canvas>
            <Grid  x:Name="ThePreViewGrid" Height="450" Width="600">
                
            </Grid>
            <Grid Height="450" 
                  Width="600"
                  x:Name="WindowChromeGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="100*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal"
                            WindowChrome.IsHitTestVisibleInChrome="True" 
                            VerticalAlignment="Stretch" 
                            Height="41"
                            HorizontalAlignment="Right">
                            <Button x:Name="butmini"
                                    Foreground="White"
                                    Content="-" 
                                    Width="62" 
                                    Command="{Binding ButMinizeCommand}"
                                    Background="#2b2b2b"                            
                                    BorderThickness="0"
                                    Opacity="0.8"
                            />
                            <Button x:Name="butclose"  
                                    Content="X" 
                                    Foreground="White"
                                    Width="59" 
                                    Command="{Binding ButCloseCommand}"
                                    Background="#2b2b2b"
                                    Opacity="0.8"
                                    BorderThickness="0"
                                    Margin="0,0,0,0">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#2e2e2e"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Background" TargetName="border" Value="#fa2a2a"/>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#2e2e2e"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Background" TargetName="border" Value="#fa2a2a"/>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#2e2e2e"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Transparent"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver , ElementName=PreViewGrid}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>
        </Canvas>
        
    </Grid>
</Window>
